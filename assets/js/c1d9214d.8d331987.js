"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2739],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var o=r.createContext({}),u=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},c=function(n){var e=u(n.components);return r.createElement(o.Provider,{value:e},n.children)},s={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,o=n.parentName,c=p(n,["components","mdxType","originalType","parentName"]),d=u(t),f=a,k=d["".concat(o,".").concat(f)]||d[f]||s[f]||i;return t?r.createElement(k,l(l({ref:e},c),{},{components:t})):r.createElement(k,l({ref:e},c))}));function f(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,l=new Array(i);l[0]=d;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=n,p.mdxType="string"==typeof n?n:a,l[1]=p;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1764:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return u},assets:function(){return c},toc:function(){return s},default:function(){return f}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],p={slug:"binary-heap",title:"\u5b9e\u73b0\u4e8c\u53c9\u5806-\u6700\u5927\u5806",authors:"zeffon",tags:["structure"],date:new Date("2020-01-07T00:00:00.000Z")},o=void 0,u={permalink:"/blog/binary-heap",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2020/2020-01-07-binary-heap.md",source:"@site/blog/2020/2020-01-07-binary-heap.md",title:"\u5b9e\u73b0\u4e8c\u53c9\u5806-\u6700\u5927\u5806",description:"\u4e8c\u53c9\u5806\u5206\u4e3a\u6700\u5c0f\u5806\u548c\u6700\u5927\u5806\uff0c\u672c\u6587\u4ecb\u7ecd\u5b9e\u73b0\u4e00\u4e2a\u6700\u5927\u5806\u3002",date:"2020-01-07T00:00:00.000Z",formattedDate:"January 7, 2020",tags:[{label:"structure",permalink:"/blog/tags/structure"}],readingTime:2.06,truncated:!0,authors:[{name:"Zeffon Wu",title:"A web engineer",url:"https://github.com/zeffon",imageURL:"https://github.com/zeffon.png",key:"zeffon"}],prevItem:{title:"Java\u4e8b\u52a1\u4f20\u64ad",permalink:"/blog/java-transaction"},nextItem:{title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u65b9\u5f0f",permalink:"/blog/binary-tree-traversal"}},c={authorsImageUrls:[void 0]},s=[{value:"\u524d\u8a00",id:"\u524d\u8a00",children:[]},{value:"\u6b63\u6587",id:"\u6b63\u6587",children:[{value:"\u6dfb\u52a0",id:"\u6dfb\u52a0",children:[]},{value:"\u5220\u9664",id:"\u5220\u9664",children:[]},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",children:[]}]}],d={toc:s};function f(n){var e=n.components,t=(0,a.Z)(n,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u4e8c\u53c9\u5806\u5206\u4e3a\u6700\u5c0f\u5806\u548c\u6700\u5927\u5806\uff0c\u672c\u6587\u4ecb\u7ecd\u5b9e\u73b0\u4e00\u4e2a\u6700\u5927\u5806\u3002"),(0,i.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e8c\u53c9\u5806\u5206\u4e3a\u6700\u5c0f\u5806\u548c\u6700\u5927\u5806"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u5927\u5806\uff1a\u5806\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5927\u4e8e\u5176\u7236\u8282\u70b9\u7684\u503c(\u5373\u6839\u8282\u70b9\u662f\u6700\u5927\u503c)\uff0c\u6700\u5c0f\u5806\u5219\u53cd\u4e4b\u3002")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u5806\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u5806\u662f\u4ece 1 \u5f00\u59cb\u8ba1\u6570\u7684\uff0c\u6309\u5c42\u6570\u904d\u5386\u7684\u65b9\u5f0f\u7ed9\u8282\u70b9\u6807\u4e0a\u987a\u5e8f\u3002")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u672c\u6587\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u6700\u5927\u5806"))),(0,i.kt)("h2",{id:"\u6b63\u6587"},"\u6b63\u6587"),(0,i.kt)("h3",{id:"\u6dfb\u52a0"},"\u6dfb\u52a0"),(0,i.kt)("p",null,"\u5411\u4e8c\u53c9\u5806\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u53ea\u9700\u628a\u5b83\u653e\u5728\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\uff0c\u7136\u540e\u8be5\u8282\u70b9\u4e0e\u7236\u8282\u70b9\u8fdb\u884c\u5927\u5c0f\u6bd4\u8f83\u3002\u5982\u679c\u5927\u4e8e\u7236\u8282\u70b9\u7684\u503c\uff0c\u9700\u8981\u5c06\u5176\u8fdb\u884c\u4e0a\u6d6e\uff0c\u76f4\u81f3\u5230\u5408\u9002\u4f4d\u7f6e\uff1b\u5426\u5219\u4e0d\u9700\u8981\u6d6e\u52a8\u3002\n\u5f80\u5806\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            79\n          /   \\\n        56     49\n       /  \\   /   \\\n     22   29 34   40\n     /\n    10\n")),(0,i.kt)("p",null,"\u73b0\u5728\u6dfb\u52a0 61\uff0c\u653e\u5728 10 \u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            79\n          /   \\\n        56     49\n       /  \\   /   \\\n     22   29 34   40\n     /\n    10  61\n")),(0,i.kt)("p",null,"\u4e0e\u7236\u8282\u70b9 29 \u8fdb\u884c\u6bd4\u8f83\uff0c\u5927\u4e8e\u7236\u8282\u70b9\u7684\u503c\uff0c\u4ea4\u6362\u4e24\u8005\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u8fdb\u884c\u4e0a\u6d6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            79\n          /   \\\n        56     49\n       /  \\   /   \\\n      61  29 34   40\n     / \\\n    10  22\n")),(0,i.kt)("p",null,"61 \u7684\u8282\u70b9\u518d\u4e0e\u7236\u8282\u70b9 56 \u6bd4\u8f83\uff0c\u5927\u4e8e\u9700\u8981\u4e0a\u6d6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            79\n          /   \\\n        61     49\n       /  \\   /   \\\n      56  29 34   40\n     / \\\n    10  22\n")),(0,i.kt)("p",null,"\u73b0\u5728\u6ee1\u8db3\u4e86"),(0,i.kt)("h3",{id:"\u5220\u9664"},"\u5220\u9664"),(0,i.kt)("p",null,"\u5220\u9664\u64cd\u4f5c\u662f\u5c06\u5806\u4e2d\u6700\u5927\u7684\u5143\u7d20\u5f39\u51fa\uff0c\u6839\u8282\u70b9(1 \u4f4d\u7f6e)\u4e0e\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u4f4d\u7f6e\u4e92\u6362\u3002size \u5927\u5c0f\u51cf\u4e00\uff0c\u540e\u5c06\u65b0\u7684\u6839\u8282\u70b9\u4e0b\u6c89\u5230\u5408\u9002\u4f4d\u7f6e\u3002\n\u5220\u9664\u5806\u4e2d\u6700\u5927\u503c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            79\n          /   \\\n        56     49\n       /  \\   /   \\\n     22   29 34   40\n     /\n    10\n")),(0,i.kt)("p",null,"79 \u4e0e 10 \u4ea4\u6362\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            10\n          /   \\\n        56     49\n       /  \\   /   \\\n     22   29 34   40\n     /\n    79\n")),(0,i.kt)("p",null,"size \u5927\u5c0f\u51cf\u53bb\u4e00"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            10\n          /   \\\n        56     49\n       /  \\   /   \\\n     22   29 34   40\n")),(0,i.kt)("p",null,"\u7236\u8282\u70b9 10 \u4e0e\u5de6\u53f3\u8282\u70b9\u4e2d\u6700\u5927\u503c\u8282\u70b9 56 \u4ea4\u6362\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            56\n          /   \\\n        10     49\n       /  \\   /   \\\n     22   29 34   40\n")),(0,i.kt)("p",null,"\u540c\u7406\uff0c10 \u4e0e 29 \u4ea4\u6362\u4f4d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"            56\n          /   \\\n        29     49\n       /  \\   /   \\\n     22   10 34   40\n")),(0,i.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class MaxHeap {\n\n    private int data[]; // \u5b58\u653e\u5806\u6570\u636e\u7684\u6570\u7ec4\n    private int size;       //\u5f53\u524d\u5806\u7684\u5927\u5c0f\n    private int capacity;   //\u5806\u7684\u6700\u5927\u5bb9\u91cf\n\n    // \u521d\u59cb\u5316\u65f6\n    public MaxHeap(int capacity){\n        data = new int[capacity+1];\n        this.size = 0;\n        this.capacity = capacity;\n    }\n\n    //\u5411\u5806\u91cc\u9762\u63d2\u5165\u5143\u7d20\n    public void insert(int item){\n        if(size == capacity){\n            System.out.println("The heap is full");\n            return;\n        }\n        data[size+1] = item; // \u5c06\u5143\u7d20\u653e\u5728\u6700\u540e\u4e00\u4e2a\u7684\u4e0b\u4e00\u4e2a\n        size++;\n        shiftUp(size); // \u5c06\u5143\u7d20\u4e0a\u6d6e\u81f3\u5408\u9002\u4f4d\u7f6e\n    }\n\n    //\u5806\u63d2\u5165\u5143\u7d20\u65f6\u7684\u5143\u7d20\u4e0a\u6d6e\n    private void shiftUp(int k) {\n        while(k > 1 && data[k/2] < data[k]){\n            swap(data, k/2, k);\n            k /= 2;\n        }\n    }\n\n    //\u5220\u9664\u5806\u7684\u6700\u5927\u5143\u7d20\n    public int extractMax(){\n        if(size == 0){\n            System.out.println("The heap can not be null");\n            return -1;\n        }\n        int ret = data[1];\n        swap(data, 1, size); // \u7b2c\u4e00\u4e2a\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\u4f4d\u7f6e\n        size--;\n        shiftDown(1); // \u4e0b\u6c89\u5230\u5408\u9002\u4f4d\u7f6e\n        return ret;\n    }\n\n    //\u5806\u5220\u9664\u5143\u7d20\u65f6\u7684\u5143\u7d20\u4e0b\u6c89\n    private void shiftDown(int k) {\n\n        while(2*k <= size){\n            int j = 2*k; // \u5728\u6b64\u8f6e\u5faa\u73af\u4e2d\uff0cdata[k]\u548cdata[j]\u4ea4\u6362\u4f4d\u7f6e\n            if(j + 1 <= size && data[j+1] > data[j]){\n                j += 1;\n            }\n            if(data[k] > data[j])\n                break;\n            //\u5143\u7d20\u4e0b\u79fb\n            swap(data, k, j);\n            k = j;\n        }\n    }\n\n    //\u5806\u6392\u5e8f\n    public void heapSort(int arr[], MaxHeap heap){\n        for(int i = 0; i < arr.length; i++){\n            heap.insert(arr[i]);\n        }\n        for(int i = arr.length - 1; i >= 0 ; i--){\n            arr[i] = heap.extractMax();\n        }\n    }\n\n    private void swap(int[] nums, int i, int j){\n        int t = nums[i];\n        nums[i] = nums[j];\n        nums[j] = t;\n    }\n\n}\n')))}f.isMDXComponent=!0}}]);